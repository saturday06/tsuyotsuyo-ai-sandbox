# SPDX-License-Identifier: MIT OR GPL-3.0-or-later
name: lint

permissions: {}

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
    branches-ignore:
      - README
  push:
    branches-ignore:
      - README
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Install deb packages
        run: sudo ./tools/install_ubuntu_packages.sh
      - name: Disable git config core.quotepath
        run: git config core.quotepath off
      - name: Check file permissions
        run: |
          git ls-files ':!tools/*.sh' ':!tools/*.py' ':!tests/resources' ':!typings' | while read -r f; do
            echo "$f"
            if [ -x "$f" ]; then
              echo "$f has unnecessary executable permission."
              exit 1
            fi
          done
          git ls-files 'tools/*.sh' 'tools/*.py' | while read -r f; do
            echo "$f"
            if [ ! -x "$f" ]; then
              echo "$f has no executable permission."
              exit 1
            fi
          done
      - name: Check file name characters
        run: |
          git ls-files | while read -r f; do
            encoding=$(echo "$f" | uchardet)
            if [ "$encoding" != "ASCII" ]; then
              echo "$f is not ascii file name but $encoding."
              exit 1
            fi
          done

          git ls-files "*.py" "*.pyi" | while read -r f; do
            if [ "$f" != "$(echo "$f" | LC_ALL=C tr "[:upper:]" "[:lower:]")" ]; then
              echo "$f contains uppercase character"
              exit 1
            fi
          done
      - name: Check source code formatting
        run: |
          ./tools/format.sh
          git diff --exit-code
      - name: Install hadolint
        run: ./tools/install_hadolint.sh
      - name: Lint
        run: ./tools/lint.sh

  super-linter:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # for super-linter
      - name: Super-Linter
        run: ./tools/super-linter.sh
